name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20.x'
  HUSKY: '0'
  NEXT_TELEMETRY_DISABLED: '1'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump Version
        id: version
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        run: npx conventional-changelog-cli -p angular -i CHANGELOG.md -s

      - name: Create Release Branch
        run: |
          git checkout -b release/v${{ steps.version.outputs.version }}
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): v${{ steps.version.outputs.version }}"
          git push --set-upstream origin release/v${{ steps.version.outputs.version }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: release/v${{ steps.version.outputs.version }}
          title: 'Release v${{ steps.version.outputs.version }}'
          body: |
            # Release v${{ steps.version.outputs.version }}

            ## Changes

            $(cat CHANGELOG.md)
          draft: false

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: 'Release v${{ steps.version.outputs.version }}'
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
