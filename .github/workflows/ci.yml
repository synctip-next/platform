name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - ".github/**/*.md"
      - "docs/**"
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - ".github/**/*.md"
      - "docs/**"
  schedule:
    - cron: "0 0 * * 0"

env:
  NODE_VERSION: "20.x"
  HUSKY: "0"
  NEXT_TELEMETRY_DISABLED: "1"

jobs:
  quality:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache Dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: Code Formatting
        run: npm run format:check
        if: success() || failure()

      - name: Type Check
        run: npm run type-check
        if: success() || failure()

      - name: Lint
        run: npm run lint
        if: success() || failure()

      - name: Cache Test
        uses: actions/cache@v4
        id: test-cache
        with:
          path: coverage
          key: ${{ runner.os }}-test-coverage-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-test-coverage-

      - name: Run Tests
        run: npm run test:coverage
        if: success() || failure()

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: coverage
          retention-days: 7
        if: success() || failure()

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: false

      - name: Cache NextJS
        uses: actions/cache@v4
        id: nextjs-cache
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: Build
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            .next
            out
            public
          compression-level: 9
          retention-days: 3

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    needs: []
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache Dependencies
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          command: monitor

      - name: Audit Packages
        run: |
          npm audit --json > npm-audit.json || true
          echo "## npm Audit Summary" > audit-report.md
          echo "Found $(jq '.metadata.vulnerabilities.total' npm-audit.json || echo 'unknown') vulnerabilities" >> audit-report.md
          echo "- Critical: $(jq '.metadata.vulnerabilities.critical' npm-audit.json || echo 'unknown')" >> audit-report.md
          echo "- High: $(jq '.metadata.vulnerabilities.high' npm-audit.json || echo 'unknown')" >> audit-report.md
          echo "- Moderate: $(jq '.metadata.vulnerabilities.moderate' npm-audit.json || echo 'unknown')" >> audit-report.md
          echo "- Low: $(jq '.metadata.vulnerabilities.low' npm-audit.json || echo 'unknown')" >> audit-report.md
        continue-on-error: true

      - name: Upload Audit Result
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            npm-audit.json
            audit-report.md
          retention-days: 30

      - name: Check Outdated
        run: npm outdated --json > outdated.json || true

      - name: Upload Outdated Results
        uses: actions/upload-artifact@v4
        with:
          name: outdated-packages
          path: outdated.json
          retention-days: 30